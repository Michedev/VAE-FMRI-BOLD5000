# This is an Anaconda project file.
#
# Here you can describe your project and how to run it.
# Use `anaconda-project run` to run the project.
# The file is in YAML format, please see http://www.yaml.org/start.html for more.
#

#
# Set the 'name' key to name your project
#
name: vae_fmri

#
# Set the 'icon' key to give your project an icon
#
icon:

#
# Set a one-sentence-or-so 'description' key with project details
#
description:
#
# In the commands section, list your runnable scripts, notebooks, and other code.
# Use `anaconda-project add-command` to add commands.
#
commands:
  train-gpu:
    unix: python train.py accelerator=gpu devices=1
    env_spec: default
  train-cpu:
    unix: python train.py accelerator=cpu
    env_spec: default
  compress-runs:
    unix: compress-runs = "tar cfz saved_models.tar.gz saved_models/"
    env_spec: default
  tensorboard:
    unix: tensorboard --logdir=saved_models/
    env_spec: default
  clean-empty-runs:
    unix: |
      python -c '
      from path import Path
      for run in Path("saved_models").dirs():
          if not run.joinpath("best.ckpt").exists():
              print(f"Removing {run}")
              run.rmtree()'
    env_spec: default
  download-data:
    unix: |
      cd data; 
      wget https://figshare.com/ndownloader/files/12965447 -O BOLD5000_ROIs.zip; 
      zip --delete BOLD5000_ROIs.zip ROIs/CS1/h5 ROIs/CS2/h5 ROIs/CS3/h5 ROIs/CS4/h5;
      unzip BOLD5000_ROIs.zip; 
      rm BOLD5000_ROIs.zip;
      mv ROIs/stim_lists/CSI01_stim_lists.txt ROIs/stim_lists/CSI1_stim_lists.txt;
      mv ROIs/stim_lists/CSI02_stim_lists.txt ROIs/stim_lists/CSI2_stim_lists.txt;
      mv ROIs/stim_lists/CSI03_stim_lists.txt ROIs/stim_lists/CSI3_stim_lists.txt;
      mv ROIs/stim_lists/CSI04_stim_lists.txt ROIs/stim_lists/CSI4_stim_lists.txt;
      wget https://www.dropbox.com/s/5ie18t4rjjvsl47/BOLD5000_Stimuli.zip?dl=1 -O BOLD5000_Stimuli.zip;
      unzip BOLD5000_Stimuli.zip;
      rm BOLD5000_Stimuli.zip;
  test:
    unix: pytest tests/
    env_spec: default
#
# In the services section, list any services that should be
# available before your code runs.
# Use `anaconda-project add-service` to add services.
#
services: {}

#
# In the downloads section, list any URLs to download to local files
# before your code runs.
# Use `anaconda-project add-download` to add downloads.
#
downloads:


# In the packages section, list any packages that must be installed
# before your code runs.
# Use `anaconda-project add-packages` to add packages.
#
packages:
- pytorch
- torchvision
- cpuonly
- pip:
  - pytorch-lightning
  - path
  - hydra-core
  - h5py
  - tensorguard
  - pydicom
  - nibabel
- python=3.9
- pillow
- matplotlib
- seaborn
- ipykernel
- scipy
- pytest
channels:
- pytorch

#
#  cudatoolskit=11.3 is not available for osx-64
platforms:
- linux-64
- win-64

variables:
  HYDRA_FULL_ERROR: 1
#
# You can define multiple, named environment specs.
# Each inherits any global packages or channels,
# but can have its own unique ones also.
# Use `anaconda-project add-env-spec` to add environment specs.
#
env_specs:
  default:
    description: Default environment spec for running commands
    packages: []
    channels: []
    platforms: []

